Set_2

1)
CREATE TABLE orders (
  OrderID INT PRIMARY KEY,
  CustomerID INT,
  OrderDate DATE,
  OrderStatus VARCHAR(255),
  OrderTotal DECIMAL(10,2),
  FOREIGN KEY (CustomerID) REFERENCES customers(CustomerID)
);

INSERT INTO orders (OrderID, CustomerID, OrderDate, OrderStatus, OrderTotal)
VALUES (1, 101, '2024-04-20', 'Processing', 199.00);

INSERT INTO orders (OrderID, CustomerID, OrderDate, OrderStatus, OrderTotal)
VALUES (2, 102, '2024-04-21', 'Completed', 499.00);

INSERT INTO orders (OrderID, CustomerID, OrderDate, OrderStatus, OrderTotal)
VALUES (3, 103, '2024-04-22', 'Cancelled', 149.00);

INSERT INTO orders (OrderID, CustomerID, OrderDate, OrderStatus, OrderTotal)
VALUES (4, 101, '2024-04-23', 'Completed', 999.00);

INSERT INTO orders (OrderID, CustomerID, OrderDate, OrderStatus, OrderTotal)
VALUES (5, 102, '2024-04-24', 'On Hold', 349.00);


_______________________________

2)
SELECT SUM(QuantityAvailable)
FROM products
WHERE Category = 'Electronics' AND Name = 'Laptop';


CREATE VIEW ProductDetails AS
SELECT Name, Description, Price, Category
FROM products;


CREATE VIEW InventoryDetails AS
SELECT QuantityAvailable, SupplierID
FROM products;


SELECT Price
FROM ProductDetails
WHERE Name = 'Smartphone';


SELECT QuantityAvailable
FROM InventoryDetails
WHERE (SELECT ProductID FROM products WHERE Name = 'Smartphone') = products.ProductID;


CREATE VIEW ElectronicsInformation AS
SELECT pd.*, id.*
FROM ProductDetails pd
INNER JOIN InventoryDetails id ON pd.Name = (
  SELECT Name
  FROM products
  WHERE Category = 'Electronics'
);
